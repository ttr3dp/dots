# specify history file
HISTFILE="${XDG_STATE_HOME}/yash/history"
# create HISTFILE parent directory if missing
! [ -d "${HISTFILE%/*}" ] && mkdir -p "${HISTFILE%/*}"
HISTSIZE=10000
HISTRMDUP=500

set -o emacs
# Uncomment if you want to clear the screen with Ctrl-L.
bindkey --emacs '\^L' clear-and-redraw-all

# enable bash-like extended expansion
set --brace-expand
# enable recursive pathname expansion
set --extended-glob
# don't implicitly expand non-existent variables to empty strings
set --no-unset
# don't save commands starting with a space in history
set --hist-space

# ensure job control works as expected
case $- in (*m*)
  trap - TSTP TTIN TTOU
esac

alias \
  ls="ls --color=auto" \
  cp="cp -iv" \
  rm="rm -iv" \
  mv="mv -iv" \
  mkd="mkdir -pv"

alias shconf="${EDITOR} ${XDG_CONFIG_HOME}/yash/rc"
alias reload="echo \"reloading config...\" && exec ${SHELL}"
alias vim="nvim"
alias o="open"
alias p="sudo pacman"

parse_git_branch() {
    printf "%s" "$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's~* \(.*\)~\1~')"
}
parse_git_changes() {
  [ -n "$(git status --porcelain)" ] && printf "*"
}
vcs_info() {
  printf "%s%s" "$(parse_git_branch)" "$(parse_git_changes)"
}
extra_ps1_info() {
    git rev-parse > /dev/null 2>&1 && vcs_info
}
PS1="\fc\${PWD//\$HOME/\~}\fm \$(extra_ps1_info)\n\fg$ "

# GPG
export GPG_TTY=$(tty)

# vim: set et sw=2 sts=2 tw=78 ft=sh:
